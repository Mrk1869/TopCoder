import math
import string

class InfiniteSequence2:
    def calc(self, n, p, q, x, y):

        archive = [0]*(n+1)
        if n <= 0:
            return 1
        elif archive[n] != 0:
            return archive[n]
        else:
            res = self.calc(n/p-x, p, q, x, y) + self.calc(n/q-y, p, q, x, y)
            archive[n] = res
            return res

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pfx 2.1.9
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, p3, p4, hasAnswer, p5):
    sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0) + str(",") + str(p1) + str(",") + str(p2) + str(",") + str(p3) + str(",") + str(p4))
    print(str("]"))
    obj = InfiniteSequence2()
    startTime = time.clock()
    answer = obj.calc(p0, p1, p2, p3, p4)
    endTime = time.clock()
    res = True
    print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
    if (hasAnswer):
        print(str("Desired answer:"))
        print(str("\t") + str(p5))

    print(str("Your answer:"))
    print(str("\t") + str(answer))
    if (hasAnswer):
        res = answer == p5

    if (not res):
        print(str("DOESN'T MATCH!!!!"))
    elif ((endTime - startTime) >= 2):
        print(str("FAIL the timeout"))
        res = False
    elif (hasAnswer):
        print(str("Match :-)"))
    else:
        print(str("OK, but is it right?"))

    print(str(""))
    return res

all_right = True


# ----- test 0 -----
p0 = 10000000
p1 = 2
p2 = 3
p3 = 10000000
p4 = 10000000
p5 = 2
all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, True, p5) and all_right
# ------------------

# ----- test 1 -----
p0 = 12
p1 = 2
p2 = 3
p3 = 1
p4 = 0
p5 = 8
all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, True, p5) and all_right
# ------------------

# ----- test 2 -----
p0 = 0
p1 = 2
p2 = 2
p3 = 0
p4 = 0
p5 = 1
all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, True, p5) and all_right
# ------------------

# ----- test 3 -----
p0 = 123
p1 = 45
p2 = 67
p3 = 8
p4 = 9
p5 = 2
all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, True, p5) and all_right
# ------------------

if (all_right):
    print(str("You're a stud (at least on the example cases)!"))
else:
    print(str("Some of the test cases had errors."))

# PROBLEM STATEMENT
#
# NOTE: This problem statement contains subscripts that may not display properly if viewed outside of the applet.
#
#
# Let's consider an infinite sequence A defined as follows:
#
# Ai = 1 for all i <= 0;
# Ai = A[i/p]-x + A[i/q]-y for all i >= 1, where [x] denotes the floor function of x. (see Notes)
#
#
# You will be given n, p, q, x and y. Return the n-th element of A (index is 0-based).
#
# DEFINITION
# Class:InfiniteSequence2
# Method:calc
# Parameters:long integer, integer, integer, integer, integer
# Returns:long integer
# Method signature:def calc(self, n, p, q, x, y):
#
#
# NOTES
# -[x] denotes the floor function of x which returns the highest integer less than or equal to x. For example, [3.4] = 3, [0.6] = 0.
#
#
# CONSTRAINTS
# -n will be between 0 and 10^13, inclusive.
# -p and q will both be between 2 and 10^9, inclusive.
# -x and y will both be between 0 and 10^9, inclusive.
#
#
# EXAMPLES
#
# 0)
# 10000000
# 2
# 3
# 10000000
# 10000000
#
# Returns: 2
#
# A[10000000] = A[-5000000] + A[-6666667] = 2.
#
# 1)
# 12
# 2
# 3
# 1
# 0
#
# Returns: 8
#
#
#
# 2)
# 0
# 2
# 2
# 0
# 0
#
# Returns: 1
#
# A[0] = 1.
#
# 3)
# 123
# 45
# 67
# 8
# 9
#
# Returns: 2
#
#
#
# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pfx 2.1.9!
